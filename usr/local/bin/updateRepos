#!/bin/bash

TARGETDIR=/var/www/repos
LOGFILE=$TARGETDIR/repos-last-updated
PIDFILE=/var/run/rsyncrepos.pid

mkdir -p $TARGETDIR/centos/{5,6}/{os,updates}
mkdir -p $TARGETDIR/fedora/{16,17}/{os,updates}

function LOG {
  echo $(date '+%Y-%m-%d %H%M') : $1 | tee -a $LOGFILE.log
}

function SYNC {
  OPTS="--bwlimit=2000 --exclude=debug/ -vaH --numeric-ids --delete --delete-after --delay-updates"
  OPTS="--exclude=debug/ -vaH --numeric-ids --delete --delete-after --delay-updates"
  LOG "Running \'rsync $OPTS $@.\'"
  rsync $OPTS $@ >> $LOGFILE.rsync 2>&1
  local ERRORCODE=$?
  if [ $ERRORCODE -ne 0 ]; then
    SYNCERROR=1
    LOG "Rsync exited with error code $ERRORCODE."
  fi
} 

LOG "==============================================="
echo "===============================================" >> $LOGFILE.rsync
echo "$(date '+%Y-%m-%d %H:%M:%S')" >> $LOGFILE.rsync
echo "===============================================" >> $LOGFILE.rsync

LOG "Startup with $0 $@"


if [ -f $PIDFILE ]; then
   LOG "PID file exists."
   RUNPID=$(cat $PIDFILE)
   LOG "Process ID is $RUNPID."
   if ps -p $RUNPID > /dev/null; then
      PROCAGE=$(expr $(date +%s) - $(stat -c %Z $PIDFILE))
      LOG "PID is - $PROCAGE - seconds old..."
      if [ $PROCAGE -gt 40000 ]; then
        LOG "Killing stalled process."
        kill -9 $RUNPID
        LOG "Gotta take a leak. Be back in 5 seconds."
        sleep 5
        ps -p $RUNPID > /dev/null
        if [ $? -gt 0 ]; then
          LOG "Process sucessfully killed."
        else
          LOG "Process did not die. You have a problem. See you in the logs!"
        fi
      else
        LOG "We'll let this one marinate awhile longer."
      fi
      exit 1
   else
      LOG "Mirror pid found but process dead, cleaning up"
      rm -f $PIDFILE
   fi
else
   LOG "No process Detected. Ok to continue."
fi

LOG "Recording PID as $$."
echo $$ > $PIDFILE
LOG "Starting rsyncs"

SYNCERROR=0











#SYNC "rsync://$SYNCHOST/updates/17/x86_64/                /var/www/repos/fedora/17/updates/x86_64/"

cat etc/updateRepos.conf | awk '/^Host: /,/^$/ {print $0}' |














if [ $SYNCERROR -eq 0 ]; then
  LOG "Process completed. All repos are in sync."
  logger "$0 exited with no errors."
  echo "Last successful sync at $(date +'%Y-%m-%d at %H:%M:%S')." > $LOGFILE.success
else
  LOG "Process completed. There were errors. Please check the log for more details."
  logger "$0 exited with errors."
fi

LOG "Removing $PIDFILE."
LOG "===="
rm -f $PIDFILE
exit $SYNCERROR


